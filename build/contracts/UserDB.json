{
  "contractName": "UserDB",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "changeOwner",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_logic",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "LogChangeOwner",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_user",
          "type": "address"
        },
        {
          "name": "_organization",
          "type": "string"
        }
      ],
      "name": "setOrganization",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_user",
          "type": "address"
        },
        {
          "name": "_organization",
          "type": "string"
        }
      ],
      "name": "setUser",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_user",
          "type": "address"
        },
        {
          "name": "_active",
          "type": "bool"
        }
      ],
      "name": "setUserActive",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_user",
          "type": "address"
        },
        {
          "name": "_roles",
          "type": "uint256"
        }
      ],
      "name": "setRoles",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "getFullUser",
      "outputs": [
        {
          "components": [
            {
              "name": "organization",
              "type": "string"
            },
            {
              "name": "roles",
              "type": "uint256"
            },
            {
              "name": "active",
              "type": "bool"
            }
          ],
          "name": "user",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.0+commit.1d4f565a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"_user\",\"type\":\"address\"},{\"name\":\"_organization\",\"type\":\"string\"}],\"name\":\"setOrganization\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_user\",\"type\":\"address\"},{\"name\":\"_roles\",\"type\":\"uint256\"}],\"name\":\"setRoles\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_user\",\"type\":\"address\"},{\"name\":\"_organization\",\"type\":\"string\"}],\"name\":\"setUser\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_user\",\"type\":\"address\"},{\"name\":\"_active\",\"type\":\"bool\"}],\"name\":\"setUserActive\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getFullUser\",\"outputs\":[{\"components\":[{\"name\":\"organization\",\"type\":\"string\"},{\"name\":\"roles\",\"type\":\"uint256\"},{\"name\":\"active\",\"type\":\"bool\"}],\"name\":\"user\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_logic\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"LogChangeOwner\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"changeOwner(address)\":{\"params\":{\"_newOwner\":\"The address of the new owner\"}},\"constructor\":{\"params\":{\"_logic\":\"the logic contract owning this database contract\"}},\"getFullUser(address)\":{\"details\":\"the onlyOwner-modifier is used, so that only the logic-contract is allowed to read directly from the contract\",\"params\":{\"_user\":\"account of the user to be returned\"},\"return\":\"returns user-struct\"},\"setOrganization(address,string)\":{\"details\":\"the onlyOwner-modifier is used, so that only the logic-contract is allowed to write into the storage\",\"params\":{\"_organization\":\"new name of the organization\",\"_user\":\"ethereum-address of an user\"}},\"setRoles(address,uint256)\":{\"details\":\"the onlyOwner-modifier is used, so that only the logic-contract is allowed to write into the storage\",\"params\":{\"_roles\":\"first name of the user\",\"_user\":\"address of the user\"}},\"setUser(address,string)\":{\"details\":\"the onlyOwner-modifier is used, so that only the logic-contract is allowed to write into the storage\",\"params\":{\"_organization\":\"organization the user is representing\",\"_user\":\"address of the user\"}},\"setUserActive(address,bool)\":{\"details\":\"the onlyOwner-modifier is used, so that only the logic-contract is allowed to write into the storage\",\"params\":{\"_active\":\"flag if the account should be active\",\"_user\":\"ethereum-address of an user\"}}},\"title\":\"The database contract for the users, traders and admins of the certificate of origin\"},\"userdoc\":{\"methods\":{\"changeOwner(address)\":{\"notice\":\"`owner` can step down and assign some other address to this role\"},\"constructor\":\"The constructor of the UserDB\",\"getFullUser(address)\":{\"notice\":\"function to return all the data of an user\"},\"setOrganization(address,string)\":{\"notice\":\"function to change the name of an existing organization, can only be used when the user already exists\"},\"setRoles(address,uint256)\":{\"notice\":\"function for editing the rights of an user\"},\"setUser(address,string)\":{\"notice\":\"function for creating, editing an user, it cannot be used to set a Role of an userif the user does not exists yet it will be creates, otherwise the older userdata will be overwritten\"},\"setUserActive(address,bool)\":{\"notice\":\"function to (de-)active a user, dan only be used when the user already exists\"}},\"notice\":\"This contract only provides getter and setter methods that are only callable by the corresponging owner-contract\"}},\"settings\":{\"compilationTarget\":{\"/Users/bagaricj/Code/ew-user-registry-lib/contracts/Users/UserDB.sol\":\"UserDB\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/bagaricj/Code/ew-user-registry-lib/contracts/Users/UserDB.sol\":{\"keccak256\":\"0x1ca1e16f7c60feea57e5a07f52e0ff8369ccb818c929fe0df61534df6ec6bbb7\",\"urls\":[\"bzzr://acd609cf737c26a013326eddbf5e2ef276cbdf05f9e67b6953a4c915cf26c88f\"]},\"ew-utils-general-lib/contracts/Msc/Owned.sol\":{\"keccak256\":\"0x3853bbd8dd399bf2efb8592f0d102f8025398f6872ea5d823cc94dba5ab6d68c\",\"urls\":[\"bzzr://f560494f32365ed0f8af8844f94283946bb3e5abfb17d0d83626a9961fa57604\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051602080610995833981018060405261002f9190810190610067565b60008054600160a060020a031916600160a060020a03929092169190911790556100aa565b60006100608251610099565b9392505050565b60006020828403121561007957600080fd5b60006100858484610054565b949350505050565b600160a060020a031690565b60006100a48261008d565b92915050565b6108dc806100b96000396000f3fe6080604052600436106100825763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416630ea6af87811461008757806333a3ad8f146100a95780633f1a51b8146100c957806388e084ca146100e95780638da5cb5b14610109578063a6f9dae114610134578063c7af3efc14610154575b600080fd5b34801561009357600080fd5b506100a76100a236600461067f565b610181565b005b3480156100b557600080fd5b506100a76100c43660046106d5565b61020e565b3480156100d557600080fd5b506100a76100e436600461067f565b61025b565b3480156100f557600080fd5b506100a7610104366004610645565b6102bf565b34801561011557600080fd5b5061011e61031a565b60405161012b9190610803565b60405180910390f35b34801561014057600080fd5b506100a761014f36600461061f565b610329565b34801561016057600080fd5b5061017461016f36600461061f565b6103e4565b60405161012b9190610837565b600054600160a060020a031633146101b75760405160e560020a62461bcd0281526004016101ae90610827565b60405180910390fd5b600160a060020a038316600090815260016020526040902060020154839060ff1615156101e357600080fd5b600160a060020a03841660009081526001602052604090206102068185856104ec565b505050505050565b600054600160a060020a0316331461023b5760405160e560020a62461bcd0281526004016101ae90610827565b600160a060020a0390911660009081526001602081905260409091200155565b600054600160a060020a031633146102885760405160e560020a62461bcd0281526004016101ae90610827565b600160a060020a03831660009081526001602052604090206102ab8184846104ec565b50600201805460ff19166001179055505050565b600054600160a060020a031633146102ec5760405160e560020a62461bcd0281526004016101ae90610827565b600160a060020a03919091166000908152600160205260409020600201805460ff1916911515919091179055565b600054600160a060020a031681565b600054600160a060020a031633146103565760405160e560020a62461bcd0281526004016101ae90610827565b600160a060020a03811615156103815760405160e560020a62461bcd0281526004016101ae90610817565b6000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0383161790556040517f95fd54179c11867fb083dd94347ea50f144dd4cfd7612b7bca169f162824af16906103d9908390610803565b60405180910390a150565b6103ec61056a565b600054600160a060020a031633146104195760405160e560020a62461bcd0281526004016101ae90610827565b600160a060020a0382166000908152600160208181526040928390208351815460029481161561010002600019011693909304601f8101839004909202830160809081019094526060830182815292939092849290918491908401828280156104c35780601f10610498576101008083540402835291602001916104c3565b820191906000526020600020905b8154815290600101906020018083116104a657829003601f168201915b50505091835250506001820154602082015260029091015460ff16151560409091015292915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061052d5782800160ff1982351617855561055a565b8280016001018555821561055a579182015b8281111561055a57823582559160200191906001019061053f565b5061056692915061058e565b5090565b60606040519081016040528060608152602001600081526020016000151581525090565b6105a891905b808211156105665760008155600101610594565b90565b60006105b7823561084c565b9392505050565b60006105b78235610857565b600080601f830184136105dc57600080fd5b50813567ffffffffffffffff8111156105f457600080fd5b60208301915083600182028301111561060c57600080fd5b9250929050565b60006105b782356105a8565b60006020828403121561063157600080fd5b600061063d84846105ab565b949350505050565b6000806040838503121561065857600080fd5b600061066485856105ab565b9250506020610675858286016105be565b9150509250929050565b60008060006040848603121561069457600080fd5b60006106a086866105ab565b935050602084013567ffffffffffffffff8111156106bd57600080fd5b6106c9868287016105ca565b92509250509250925092565b600080604083850312156106e857600080fd5b60006106f485856105ab565b925050602061067585828601610613565b61070e8161084c565b82525050565b61070e81610857565b600061072882610848565b80845261073c816020860160208601610868565b61074581610898565b9093016020019392505050565b601881527f307830206173206f776e6572206e6f7420616c6c6f7765640000000000000000602082015260400190565b601781527f6d73672e73656e646572206973206e6f74206f776e6572000000000000000000602082015260400190565b80516060808452600091908401906107ca828261071d565b91505060208301516107df60208601826107fa565b5060408301516107f26040860182610714565b509392505050565b61070e816105a8565b602081016108118284610705565b92915050565b6020808252810161081181610752565b6020808252810161081181610782565b602080825281016105b781846107b2565b5190565b60006108118261085c565b151590565b600160a060020a031690565b60005b8381101561088357818101518382015260200161086b565b83811115610892576000848401525b50505050565b601f01601f19169056fea265627a7a7230582079a78534870954d9b2d0cb71cb5baba915cde1631418d7944f2ab3d9857cfb576c6578706572696d656e74616cf50037",
  "deployedBytecode": "0x6080604052600436106100825763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416630ea6af87811461008757806333a3ad8f146100a95780633f1a51b8146100c957806388e084ca146100e95780638da5cb5b14610109578063a6f9dae114610134578063c7af3efc14610154575b600080fd5b34801561009357600080fd5b506100a76100a236600461067f565b610181565b005b3480156100b557600080fd5b506100a76100c43660046106d5565b61020e565b3480156100d557600080fd5b506100a76100e436600461067f565b61025b565b3480156100f557600080fd5b506100a7610104366004610645565b6102bf565b34801561011557600080fd5b5061011e61031a565b60405161012b9190610803565b60405180910390f35b34801561014057600080fd5b506100a761014f36600461061f565b610329565b34801561016057600080fd5b5061017461016f36600461061f565b6103e4565b60405161012b9190610837565b600054600160a060020a031633146101b75760405160e560020a62461bcd0281526004016101ae90610827565b60405180910390fd5b600160a060020a038316600090815260016020526040902060020154839060ff1615156101e357600080fd5b600160a060020a03841660009081526001602052604090206102068185856104ec565b505050505050565b600054600160a060020a0316331461023b5760405160e560020a62461bcd0281526004016101ae90610827565b600160a060020a0390911660009081526001602081905260409091200155565b600054600160a060020a031633146102885760405160e560020a62461bcd0281526004016101ae90610827565b600160a060020a03831660009081526001602052604090206102ab8184846104ec565b50600201805460ff19166001179055505050565b600054600160a060020a031633146102ec5760405160e560020a62461bcd0281526004016101ae90610827565b600160a060020a03919091166000908152600160205260409020600201805460ff1916911515919091179055565b600054600160a060020a031681565b600054600160a060020a031633146103565760405160e560020a62461bcd0281526004016101ae90610827565b600160a060020a03811615156103815760405160e560020a62461bcd0281526004016101ae90610817565b6000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0383161790556040517f95fd54179c11867fb083dd94347ea50f144dd4cfd7612b7bca169f162824af16906103d9908390610803565b60405180910390a150565b6103ec61056a565b600054600160a060020a031633146104195760405160e560020a62461bcd0281526004016101ae90610827565b600160a060020a0382166000908152600160208181526040928390208351815460029481161561010002600019011693909304601f8101839004909202830160809081019094526060830182815292939092849290918491908401828280156104c35780601f10610498576101008083540402835291602001916104c3565b820191906000526020600020905b8154815290600101906020018083116104a657829003601f168201915b50505091835250506001820154602082015260029091015460ff16151560409091015292915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061052d5782800160ff1982351617855561055a565b8280016001018555821561055a579182015b8281111561055a57823582559160200191906001019061053f565b5061056692915061058e565b5090565b60606040519081016040528060608152602001600081526020016000151581525090565b6105a891905b808211156105665760008155600101610594565b90565b60006105b7823561084c565b9392505050565b60006105b78235610857565b600080601f830184136105dc57600080fd5b50813567ffffffffffffffff8111156105f457600080fd5b60208301915083600182028301111561060c57600080fd5b9250929050565b60006105b782356105a8565b60006020828403121561063157600080fd5b600061063d84846105ab565b949350505050565b6000806040838503121561065857600080fd5b600061066485856105ab565b9250506020610675858286016105be565b9150509250929050565b60008060006040848603121561069457600080fd5b60006106a086866105ab565b935050602084013567ffffffffffffffff8111156106bd57600080fd5b6106c9868287016105ca565b92509250509250925092565b600080604083850312156106e857600080fd5b60006106f485856105ab565b925050602061067585828601610613565b61070e8161084c565b82525050565b61070e81610857565b600061072882610848565b80845261073c816020860160208601610868565b61074581610898565b9093016020019392505050565b601881527f307830206173206f776e6572206e6f7420616c6c6f7765640000000000000000602082015260400190565b601781527f6d73672e73656e646572206973206e6f74206f776e6572000000000000000000602082015260400190565b80516060808452600091908401906107ca828261071d565b91505060208301516107df60208601826107fa565b5060408301516107f26040860182610714565b509392505050565b61070e816105a8565b602081016108118284610705565b92915050565b6020808252810161081181610752565b6020808252810161081181610782565b602080825281016105b781846107b2565b5190565b60006108118261085c565b151590565b600160a060020a031690565b60005b8381101561088357818101518382015260200161086b565b83811115610892576000848401525b50505050565b601f01601f19169056fea265627a7a7230582079a78534870954d9b2d0cb71cb5baba915cde1631418d7944f2ab3d9857cfb576c6578706572696d656e74616cf50037",
  "sourceMap": "1264:3183:5:-;;;1780:52;8:9:-1;5:2;;;30:1;27;20:12;5:2;1780:52:5;;;;;;;;;;;;;;;;;;;;;;1327:5:8;:18;;-1:-1:-1;;;;;;1327:18:8;-1:-1:-1;;;;;1327:18:8;;;;;;;;;;1264:3183:5;;5:122:-1;;83:39;114:6;108:13;83:39;;;74:48;68:59;-1:-1;;;68:59;134:263;;249:2;237:9;228:7;224:23;220:32;217:2;;;265:1;262;255:12;217:2;300:1;317:64;373:7;353:9;317:64;;;307:74;211:186;-1:-1;;;;211:186;404:128;-1:-1;;;;;473:54;;456:76;539:105;;608:31;633:5;608:31;;;597:42;591:53;-1:-1;;591:53;;1264:3183:5;;;;;;",
  "deployedSourceMap": "1264:3183:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2178:247;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2178:247:5;;;;;;;;;;;3843:140;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3843:140:5;;;;;;;;;2869:238;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2869:238:5;;;;;;;;;3430:148;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3430:148:5;;;;;;;;;1186:20:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1186:20:8;;;;;;;;;;;;;;;;;;;;1488:203;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1488:203:8;;;;;;;;;4263:182:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;4263:182:5;;;;;;;;;;;;;;;;;2178:247;1095:5:8;;-1:-1:-1;;;;;1095:5:8;1081:10;:19;1072:56;;;;-1:-1:-1;;;;;1072:56:8;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1616:15:5;;;;;;:8;:15;;;;;:22;;;2325:5;;1616:22;;1608:31;;;;;;;;-1:-1:-1;;;;;2363:15:5;;2346:14;2363:15;;;:8;:15;;;;;2388:30;2363:15;2405:13;;2388:30;:::i;:::-;;1649:1;1130::8;2178:247:5;;;:::o;3843:140::-;1095:5:8;;-1:-1:-1;;;;;1095:5:8;1081:10;:19;1072:56;;;;-1:-1:-1;;;;;1072:56:8;;;;;;;;;-1:-1:-1;;;;;3935:15:5;;;3918:14;3935:15;;;:8;:15;;;;;;;;3960:7;:16;3843:140::o;2869:238::-;1095:5:8;;-1:-1:-1;;;;;1095:5:8;1081:10;:19;1072:56;;;;-1:-1:-1;;;;;1072:56:8;;;;;;;;;-1:-1:-1;;;;;3020:15:5;;3003:14;3020:15;;;:8;:15;;;;;3045:30;3020:15;3062:13;;3045:30;:::i;:::-;-1:-1:-1;3085:8:5;;:15;;-1:-1:-1;;3085:15:5;3096:4;3085:15;;;-1:-1:-1;;;2869:238:5:o;3430:148::-;1095:5:8;;-1:-1:-1;;;;;1095:5:8;1081:10;:19;1072:56;;;;-1:-1:-1;;;;;1072:56:8;;;;;;;;;-1:-1:-1;;;;;3528:15:5;;;;3511:14;3528:15;;;:8;:15;;;;;3553:8;;:18;;-1:-1:-1;;3553:18:5;;;;;;;;;;3430:148::o;1186:20:8:-;;;-1:-1:-1;;;;;1186:20:8;;:::o;1488:203::-;1095:5;;-1:-1:-1;;;;;1095:5:8;1081:10;:19;1072:56;;;;-1:-1:-1;;;;;1072:56:8;;;;;;;;;-1:-1:-1;;;;;1566:23:8;;;;1558:59;;;;-1:-1:-1;;;;;1558:59:8;;;;;;;;;1627:5;:17;;-1:-1:-1;;1627:17:8;-1:-1:-1;;;;;1627:17:8;;;;;1659:25;;;;;;1627:17;;1659:25;;;;;;;;;;1488:203;:::o;4263:182:5:-;4375:16;;:::i;:::-;1095:5:8;;-1:-1:-1;;;;;1095:5:8;1081:10;:19;1072:56;;;;-1:-1:-1;;;;;1072:56:8;;;;;;;;;-1:-1:-1;;;;;4423:15:5;;;;;;:8;:15;;;;;;;;;4416:22;;;;;;;;;;;-1:-1:-1;;4416:22:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4423:15;;4416:22;;;;4423:15;;4416:22;;;4423:15;4416:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4416:22:5;;;-1:-1:-1;;4416:22:5;;;;;;;;;;;;;;;;;;;;;;;4263:182;-1:-1:-1;;4263:182:5:o;1264:3183::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1264:3183:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1264:3183:5;;;-1:-1:-1;1264:3183:5;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;5:118:-1:-;;72:46;110:6;97:20;72:46;;;63:55;57:66;-1:-1;;;57:66;130:112;;194:43;229:6;216:20;194:43;;264:336;;;372:4;360:17;;356:27;-1:-1;346:2;;397:1;394;387:12;346:2;-1:-1;417:20;;457:18;446:30;;443:2;;;489:1;486;479:12;443:2;523:4;515:6;511:17;499:29;;573:3;566;558:6;554:16;544:8;540:31;537:40;534:2;;;590:1;587;580:12;534:2;339:261;;;;;;608:118;;675:46;713:6;700:20;675:46;;733:241;;837:2;825:9;816:7;812:23;808:32;805:2;;;853:1;850;843:12;805:2;888:1;905:53;950:7;930:9;905:53;;;895:63;799:175;-1:-1;;;;799:175;981:360;;;1099:2;1087:9;1078:7;1074:23;1070:32;1067:2;;;1115:1;1112;1105:12;1067:2;1150:1;1167:53;1212:7;1192:9;1167:53;;;1157:63;;1129:97;1257:2;1275:50;1317:7;1308:6;1297:9;1293:22;1275:50;;;1265:60;;1236:95;1061:280;;;;;;1348:492;;;;1489:2;1477:9;1468:7;1464:23;1460:32;1457:2;;;1505:1;1502;1495:12;1457:2;1540:1;1557:53;1602:7;1582:9;1557:53;;;1547:63;;1519:97;1675:2;1664:9;1660:18;1647:32;1699:18;1691:6;1688:30;1685:2;;;1731:1;1728;1721:12;1685:2;1759:65;1816:7;1807:6;1796:9;1792:22;1759:65;;;1741:83;;;;1626:204;1451:389;;;;;;1847:366;;;1968:2;1956:9;1947:7;1943:23;1939:32;1936:2;;;1984:1;1981;1974:12;1936:2;2019:1;2036:53;2081:7;2061:9;2036:53;;;2026:63;;1998:97;2126:2;2144:53;2189:7;2180:6;2169:9;2165:22;2144:53;;2220:110;2293:31;2318:5;2293:31;;;2288:3;2281:44;2275:55;;;2337:101;2404:28;2426:5;2404:28;;2445:292;;2543:35;2572:5;2543:35;;;2595:6;2590:3;2583:19;2607:63;2663:6;2656:4;2651:3;2647:14;2640:4;2633:5;2629:16;2607:63;;;2702:29;2724:6;2702:29;;;2682:50;;;2695:4;2682:50;;2523:214;-1:-1;;;2523:214;2745:296;2900:2;2888:15;;2937:66;2932:2;2923:12;;2916:88;3032:2;3023:12;;2881:160;3050:296;3205:2;3193:15;;3242:66;3237:2;3228:12;;3221:88;3337:2;3328:12;;3186:160;3401:735;3611:22;;3534:4;3645:37;;;3401:735;;3525:14;;;;3697:68;3525:14;3611:22;3697:68;;;3689:76;;3554:223;3854:4;3847:5;3843:16;3837:23;3872:62;3928:4;3923:3;3919:14;3906:11;3872:62;;;3787:159;4024:4;4017:5;4013:16;4007:23;4042:56;4092:4;4087:3;4083:14;4070:11;4042:56;;;-1:-1;4127:4;3507:629;-1:-1;;;3507:629;4143:110;4216:31;4241:5;4216:31;;4260:193;4368:2;4353:18;;4382:61;4357:9;4416:6;4382:61;;;4339:114;;;;;4460:387;4641:2;4655:47;;;4626:18;;4716:121;4626:18;4716:121;;4854:387;5035:2;5049:47;;;5020:18;;5110:121;5020:18;5110:121;;5248:325;5398:2;5412:47;;;5383:18;;5473:90;5383:18;5549:6;5473:90;;5580:88;5651:12;;5635:33;5675:105;;5744:31;5769:5;5744:31;;5787:92;5860:13;5853:21;;5836:43;5886:128;-1:-1;;;;;5955:54;;5938:76;6405:268;6470:1;6477:101;6491:6;6488:1;6485:13;6477:101;;;6558:11;;;6552:18;6539:11;;;6532:39;6513:2;6506:10;6477:101;;;6593:6;6590:1;6587:13;6584:2;;;6658:1;6649:6;6644:3;6640:16;6633:27;6584:2;6454:219;;;;;6681:97;6769:2;6749:14;-1:-1;;6745:28;;6729:49",
  "source": "// Copyright 2018 Energy Web Foundation\n// This file is part of the Origin Application brought to you by the Energy Web Foundation,\n// a global non-profit organization focused on accelerating blockchain technology across the energy sector,\n// incorporated in Zug, Switzerland.\n//\n// The Origin Application is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n// This is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY and without an implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details, at <http://www.gnu.org/licenses/>.\n//\n// @authors: slock.it GmbH; Martin Kuechler, martin.kuchler@slock.it; Heiko Burkhardt, heiko.burkhardt@slock.it\n\npragma solidity ^0.5.0;\npragma experimental ABIEncoderV2;\n\nimport \"ew-utils-general-lib/contracts/Msc/Owned.sol\";\n\n/// @title The database contract for the users, traders and admins of the certificate of origin\n/// @notice This contract only provides getter and setter methods that are only callable by the corresponging owner-contract\ncontract UserDB is Owned {\n\n    struct User {\n        string organization;\n        uint roles;\n        bool active;\n    }\n\n    /// @notice mapping for addresses to users\n    mapping(address => User) private userList;\n\n    /// @notice modifier to check whether a user is already set in the state\n    modifier userExists(address _user) {\n        require(userList[_user].active);\n        _;\n    }\n\n    /// @notice The constructor of the UserDB\n    /// @param _logic the logic contract owning this database contract\n    constructor(address _logic) Owned(_logic) public { }\n\n    /// @notice function to change the name of an existing organization, can only be used when the user already exists\n    /// @dev the onlyOwner-modifier is used, so that only the logic-contract is allowed to write into the storage\n    /// @param _user ethereum-address of an user\n    /// @param _organization new name of the organization\n    function setOrganization(\n        address _user,\n        string calldata _organization\n    )\n        external\n        onlyOwner\n        userExists(_user)\n    {\n        User storage u = userList[_user];\n        u.organization = _organization;\n    }\n\n    /// @notice function for creating, editing an user, it cannot be used to set a Role of an user\n    /// @notice if the user does not exists yet it will be creates, otherwise the older userdata will be overwritten\n    /// @dev the onlyOwner-modifier is used, so that only the logic-contract is allowed to write into the storage\n    /// @param _user address of the user\n    /// @param _organization organization the user is representing\n    function setUser(\n        address _user,\n        string calldata _organization\n    )\n        external\n        onlyOwner\n    {\n        User storage u = userList[_user];\n        u.organization = _organization;\n        u.active = true;\n    }\n\n    /// @notice function to (de-)active a user, dan only be used when the user already exists\n    /// @dev the onlyOwner-modifier is used, so that only the logic-contract is allowed to write into the storage\n    /// @param _user ethereum-address of an user\n    /// @param _active flag if the account should be active\n    function setUserActive(address _user, bool _active) external onlyOwner {\n        User storage u = userList[_user];\n        u.active = _active;\n    }\n\n    /// @notice function for editing the rights of an user\n    /// @dev the onlyOwner-modifier is used, so that only the logic-contract is allowed to write into the storage\n    /// @param _user address of the user\n    /// @param _roles first name of the user\n    function setRoles(address _user, uint _roles) external onlyOwner {\n        User storage u = userList[_user];\n        u.roles = _roles;\n    }\n\n    /// @notice function to return all the data of an user\n    /// @dev the onlyOwner-modifier is used, so that only the logic-contract is allowed to read directly from the contract\n    /// @param _user account of the user to be returned\n    /// @return returns user-struct\n    function getFullUser(address _user)\n        onlyOwner\n        external\n        view\n        returns (\n          User memory user\n        )\n    {\n        return userList[_user];\n    }\n}\n",
  "sourcePath": "/Users/bagaricj/Code/ew-user-registry-lib/contracts/Users/UserDB.sol",
  "ast": {
    "absolutePath": "/Users/bagaricj/Code/ew-user-registry-lib/contracts/Users/UserDB.sol",
    "exportedSymbols": {
      "UserDB": [
        478
      ]
    },
    "id": 479,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 329,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "928:23:5"
      },
      {
        "id": 330,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "952:33:5"
      },
      {
        "absolutePath": "ew-utils-general-lib/contracts/Msc/Owned.sol",
        "file": "ew-utils-general-lib/contracts/Msc/Owned.sol",
        "id": 331,
        "nodeType": "ImportDirective",
        "scope": 479,
        "sourceUnit": 799,
        "src": "987:54:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 332,
              "name": "Owned",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 798,
              "src": "1283:5:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Owned_$798",
                "typeString": "contract Owned"
              }
            },
            "id": 333,
            "nodeType": "InheritanceSpecifier",
            "src": "1283:5:5"
          }
        ],
        "contractDependencies": [
          798
        ],
        "contractKind": "contract",
        "documentation": "@title The database contract for the users, traders and admins of the certificate of origin\n @notice This contract only provides getter and setter methods that are only callable by the corresponging owner-contract",
        "fullyImplemented": true,
        "id": 478,
        "linearizedBaseContracts": [
          478,
          798
        ],
        "name": "UserDB",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "UserDB.User",
            "id": 340,
            "members": [
              {
                "constant": false,
                "id": 335,
                "name": "organization",
                "nodeType": "VariableDeclaration",
                "scope": 340,
                "src": "1318:19:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 334,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1318:6:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 337,
                "name": "roles",
                "nodeType": "VariableDeclaration",
                "scope": 340,
                "src": "1347:10:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 336,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1347:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 339,
                "name": "active",
                "nodeType": "VariableDeclaration",
                "scope": 340,
                "src": "1367:11:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 338,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1367:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "User",
            "nodeType": "StructDefinition",
            "scope": 478,
            "src": "1296:89:5",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 344,
            "name": "userList",
            "nodeType": "VariableDeclaration",
            "scope": 478,
            "src": "1438:41:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$340_storage_$",
              "typeString": "mapping(address => struct UserDB.User)"
            },
            "typeName": {
              "id": 343,
              "keyType": {
                "id": 341,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1446:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1438:24:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$340_storage_$",
                "typeString": "mapping(address => struct UserDB.User)"
              },
              "valueType": {
                "contractScope": null,
                "id": 342,
                "name": "User",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 340,
                "src": "1457:4:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_User_$340_storage_ptr",
                  "typeString": "struct UserDB.User"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 356,
              "nodeType": "Block",
              "src": "1598:59:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 349,
                            "name": "userList",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 344,
                            "src": "1616:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$340_storage_$",
                              "typeString": "mapping(address => struct UserDB.User storage ref)"
                            }
                          },
                          "id": 351,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 350,
                            "name": "_user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 346,
                            "src": "1625:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1616:15:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_User_$340_storage",
                            "typeString": "struct UserDB.User storage ref"
                          }
                        },
                        "id": 352,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "active",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 339,
                        "src": "1616:22:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 348,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        816,
                        817
                      ],
                      "referencedDeclaration": 816,
                      "src": "1608:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 353,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1608:31:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 354,
                  "nodeType": "ExpressionStatement",
                  "src": "1608:31:5"
                },
                {
                  "id": 355,
                  "nodeType": "PlaceholderStatement",
                  "src": "1649:1:5"
                }
              ]
            },
            "documentation": "@notice modifier to check whether a user is already set in the state",
            "id": 357,
            "name": "userExists",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 347,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 346,
                  "name": "_user",
                  "nodeType": "VariableDeclaration",
                  "scope": 357,
                  "src": "1583:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 345,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1583:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1582:15:5"
            },
            "src": "1563:94:5",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 365,
              "nodeType": "Block",
              "src": "1829:3:5",
              "statements": []
            },
            "documentation": "@notice The constructor of the UserDB\n @param _logic the logic contract owning this database contract",
            "id": 366,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 362,
                    "name": "_logic",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 359,
                    "src": "1814:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 363,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 361,
                  "name": "Owned",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 798,
                  "src": "1808:5:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Owned_$798_$",
                    "typeString": "type(contract Owned)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1808:13:5"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 360,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 359,
                  "name": "_logic",
                  "nodeType": "VariableDeclaration",
                  "scope": 366,
                  "src": "1792:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 358,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1792:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1791:16:5"
            },
            "returnParameters": {
              "id": 364,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1829:0:5"
            },
            "scope": 478,
            "src": "1780:52:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 390,
              "nodeType": "Block",
              "src": "2336:89:5",
              "statements": [
                {
                  "assignments": [
                    379
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 379,
                      "name": "u",
                      "nodeType": "VariableDeclaration",
                      "scope": 390,
                      "src": "2346:14:5",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_User_$340_storage_ptr",
                        "typeString": "struct UserDB.User"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 378,
                        "name": "User",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 340,
                        "src": "2346:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$340_storage_ptr",
                          "typeString": "struct UserDB.User"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 383,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 380,
                      "name": "userList",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 344,
                      "src": "2363:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$340_storage_$",
                        "typeString": "mapping(address => struct UserDB.User storage ref)"
                      }
                    },
                    "id": 382,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 381,
                      "name": "_user",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 368,
                      "src": "2372:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2363:15:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_User_$340_storage",
                      "typeString": "struct UserDB.User storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2346:32:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 388,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 384,
                        "name": "u",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 379,
                        "src": "2388:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$340_storage_ptr",
                          "typeString": "struct UserDB.User storage pointer"
                        }
                      },
                      "id": 386,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "organization",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 335,
                      "src": "2388:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 387,
                      "name": "_organization",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 370,
                      "src": "2405:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "src": "2388:30:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 389,
                  "nodeType": "ExpressionStatement",
                  "src": "2388:30:5"
                }
              ]
            },
            "documentation": "@notice function to change the name of an existing organization, can only be used when the user already exists\n @dev the onlyOwner-modifier is used, so that only the logic-contract is allowed to write into the storage\n @param _user ethereum-address of an user\n @param _organization new name of the organization",
            "id": 391,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 373,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 372,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 756,
                  "src": "2296:9:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2296:9:5"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 375,
                    "name": "_user",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 368,
                    "src": "2325:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 376,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 374,
                  "name": "userExists",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 357,
                  "src": "2314:10:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2314:17:5"
              }
            ],
            "name": "setOrganization",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 371,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 368,
                  "name": "_user",
                  "nodeType": "VariableDeclaration",
                  "scope": 391,
                  "src": "2212:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 367,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2212:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 370,
                  "name": "_organization",
                  "nodeType": "VariableDeclaration",
                  "scope": 391,
                  "src": "2235:29:5",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 369,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2235:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2202:68:5"
            },
            "returnParameters": {
              "id": 377,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2336:0:5"
            },
            "scope": 478,
            "src": "2178:247:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 418,
              "nodeType": "Block",
              "src": "2993:114:5",
              "statements": [
                {
                  "assignments": [
                    401
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 401,
                      "name": "u",
                      "nodeType": "VariableDeclaration",
                      "scope": 418,
                      "src": "3003:14:5",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_User_$340_storage_ptr",
                        "typeString": "struct UserDB.User"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 400,
                        "name": "User",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 340,
                        "src": "3003:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$340_storage_ptr",
                          "typeString": "struct UserDB.User"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 405,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 402,
                      "name": "userList",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 344,
                      "src": "3020:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$340_storage_$",
                        "typeString": "mapping(address => struct UserDB.User storage ref)"
                      }
                    },
                    "id": 404,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 403,
                      "name": "_user",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 393,
                      "src": "3029:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3020:15:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_User_$340_storage",
                      "typeString": "struct UserDB.User storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3003:32:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 410,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 406,
                        "name": "u",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 401,
                        "src": "3045:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$340_storage_ptr",
                          "typeString": "struct UserDB.User storage pointer"
                        }
                      },
                      "id": 408,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "organization",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 335,
                      "src": "3045:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 409,
                      "name": "_organization",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 395,
                      "src": "3062:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "src": "3045:30:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 411,
                  "nodeType": "ExpressionStatement",
                  "src": "3045:30:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 416,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 412,
                        "name": "u",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 401,
                        "src": "3085:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$340_storage_ptr",
                          "typeString": "struct UserDB.User storage pointer"
                        }
                      },
                      "id": 414,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "active",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 339,
                      "src": "3085:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 415,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3096:4:5",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3085:15:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 417,
                  "nodeType": "ExpressionStatement",
                  "src": "3085:15:5"
                }
              ]
            },
            "documentation": "@notice function for creating, editing an user, it cannot be used to set a Role of an user\n @notice if the user does not exists yet it will be creates, otherwise the older userdata will be overwritten\n @dev the onlyOwner-modifier is used, so that only the logic-contract is allowed to write into the storage\n @param _user address of the user\n @param _organization organization the user is representing",
            "id": 419,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 398,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 397,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 756,
                  "src": "2979:9:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2979:9:5"
              }
            ],
            "name": "setUser",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 396,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 393,
                  "name": "_user",
                  "nodeType": "VariableDeclaration",
                  "scope": 419,
                  "src": "2895:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 392,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2895:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 395,
                  "name": "_organization",
                  "nodeType": "VariableDeclaration",
                  "scope": 419,
                  "src": "2918:29:5",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 394,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2918:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2885:68:5"
            },
            "returnParameters": {
              "id": 399,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2993:0:5"
            },
            "scope": 478,
            "src": "2869:238:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 440,
              "nodeType": "Block",
              "src": "3501:77:5",
              "statements": [
                {
                  "assignments": [
                    429
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 429,
                      "name": "u",
                      "nodeType": "VariableDeclaration",
                      "scope": 440,
                      "src": "3511:14:5",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_User_$340_storage_ptr",
                        "typeString": "struct UserDB.User"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 428,
                        "name": "User",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 340,
                        "src": "3511:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$340_storage_ptr",
                          "typeString": "struct UserDB.User"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 433,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 430,
                      "name": "userList",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 344,
                      "src": "3528:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$340_storage_$",
                        "typeString": "mapping(address => struct UserDB.User storage ref)"
                      }
                    },
                    "id": 432,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 431,
                      "name": "_user",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 421,
                      "src": "3537:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3528:15:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_User_$340_storage",
                      "typeString": "struct UserDB.User storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3511:32:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 438,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 434,
                        "name": "u",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 429,
                        "src": "3553:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$340_storage_ptr",
                          "typeString": "struct UserDB.User storage pointer"
                        }
                      },
                      "id": 436,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "active",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 339,
                      "src": "3553:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 437,
                      "name": "_active",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 423,
                      "src": "3564:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3553:18:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 439,
                  "nodeType": "ExpressionStatement",
                  "src": "3553:18:5"
                }
              ]
            },
            "documentation": "@notice function to (de-)active a user, dan only be used when the user already exists\n @dev the onlyOwner-modifier is used, so that only the logic-contract is allowed to write into the storage\n @param _user ethereum-address of an user\n @param _active flag if the account should be active",
            "id": 441,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 426,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 425,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 756,
                  "src": "3491:9:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3491:9:5"
              }
            ],
            "name": "setUserActive",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 424,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 421,
                  "name": "_user",
                  "nodeType": "VariableDeclaration",
                  "scope": 441,
                  "src": "3453:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 420,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3453:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 423,
                  "name": "_active",
                  "nodeType": "VariableDeclaration",
                  "scope": 441,
                  "src": "3468:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 422,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3468:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3452:29:5"
            },
            "returnParameters": {
              "id": 427,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3501:0:5"
            },
            "scope": 478,
            "src": "3430:148:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 462,
              "nodeType": "Block",
              "src": "3908:75:5",
              "statements": [
                {
                  "assignments": [
                    451
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 451,
                      "name": "u",
                      "nodeType": "VariableDeclaration",
                      "scope": 462,
                      "src": "3918:14:5",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_User_$340_storage_ptr",
                        "typeString": "struct UserDB.User"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 450,
                        "name": "User",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 340,
                        "src": "3918:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$340_storage_ptr",
                          "typeString": "struct UserDB.User"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 455,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 452,
                      "name": "userList",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 344,
                      "src": "3935:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$340_storage_$",
                        "typeString": "mapping(address => struct UserDB.User storage ref)"
                      }
                    },
                    "id": 454,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 453,
                      "name": "_user",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 443,
                      "src": "3944:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3935:15:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_User_$340_storage",
                      "typeString": "struct UserDB.User storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3918:32:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 460,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 456,
                        "name": "u",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 451,
                        "src": "3960:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$340_storage_ptr",
                          "typeString": "struct UserDB.User storage pointer"
                        }
                      },
                      "id": 458,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "roles",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 337,
                      "src": "3960:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 459,
                      "name": "_roles",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 445,
                      "src": "3970:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3960:16:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 461,
                  "nodeType": "ExpressionStatement",
                  "src": "3960:16:5"
                }
              ]
            },
            "documentation": "@notice function for editing the rights of an user\n @dev the onlyOwner-modifier is used, so that only the logic-contract is allowed to write into the storage\n @param _user address of the user\n @param _roles first name of the user",
            "id": 463,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 448,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 447,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 756,
                  "src": "3898:9:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3898:9:5"
              }
            ],
            "name": "setRoles",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 446,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 443,
                  "name": "_user",
                  "nodeType": "VariableDeclaration",
                  "scope": 463,
                  "src": "3861:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 442,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3861:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 445,
                  "name": "_roles",
                  "nodeType": "VariableDeclaration",
                  "scope": 463,
                  "src": "3876:11:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 444,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3876:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3860:28:5"
            },
            "returnParameters": {
              "id": 449,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3908:0:5"
            },
            "scope": 478,
            "src": "3843:140:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 476,
              "nodeType": "Block",
              "src": "4406:39:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 472,
                      "name": "userList",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 344,
                      "src": "4423:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$340_storage_$",
                        "typeString": "mapping(address => struct UserDB.User storage ref)"
                      }
                    },
                    "id": 474,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 473,
                      "name": "_user",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 465,
                      "src": "4432:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4423:15:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_User_$340_storage",
                      "typeString": "struct UserDB.User storage ref"
                    }
                  },
                  "functionReturnParameters": 471,
                  "id": 475,
                  "nodeType": "Return",
                  "src": "4416:22:5"
                }
              ]
            },
            "documentation": "@notice function to return all the data of an user\n @dev the onlyOwner-modifier is used, so that only the logic-contract is allowed to read directly from the contract\n @param _user account of the user to be returned\n @return returns user-struct",
            "id": 477,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 468,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 467,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 756,
                  "src": "4307:9:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4307:9:5"
              }
            ],
            "name": "getFullUser",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 466,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 465,
                  "name": "_user",
                  "nodeType": "VariableDeclaration",
                  "scope": 477,
                  "src": "4284:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 464,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4284:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4283:15:5"
            },
            "returnParameters": {
              "id": 471,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 470,
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "scope": 477,
                  "src": "4375:16:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_User_$340_memory_ptr",
                    "typeString": "struct UserDB.User"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 469,
                    "name": "User",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 340,
                    "src": "4375:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_User_$340_storage_ptr",
                      "typeString": "struct UserDB.User"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4363:38:5"
            },
            "scope": 478,
            "src": "4263:182:5",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 479,
        "src": "1264:3183:5"
      }
    ],
    "src": "928:3520:5"
  },
  "legacyAST": {
    "absolutePath": "/Users/bagaricj/Code/ew-user-registry-lib/contracts/Users/UserDB.sol",
    "exportedSymbols": {
      "UserDB": [
        478
      ]
    },
    "id": 479,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 329,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "928:23:5"
      },
      {
        "id": 330,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "952:33:5"
      },
      {
        "absolutePath": "ew-utils-general-lib/contracts/Msc/Owned.sol",
        "file": "ew-utils-general-lib/contracts/Msc/Owned.sol",
        "id": 331,
        "nodeType": "ImportDirective",
        "scope": 479,
        "sourceUnit": 799,
        "src": "987:54:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 332,
              "name": "Owned",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 798,
              "src": "1283:5:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Owned_$798",
                "typeString": "contract Owned"
              }
            },
            "id": 333,
            "nodeType": "InheritanceSpecifier",
            "src": "1283:5:5"
          }
        ],
        "contractDependencies": [
          798
        ],
        "contractKind": "contract",
        "documentation": "@title The database contract for the users, traders and admins of the certificate of origin\n @notice This contract only provides getter and setter methods that are only callable by the corresponging owner-contract",
        "fullyImplemented": true,
        "id": 478,
        "linearizedBaseContracts": [
          478,
          798
        ],
        "name": "UserDB",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "UserDB.User",
            "id": 340,
            "members": [
              {
                "constant": false,
                "id": 335,
                "name": "organization",
                "nodeType": "VariableDeclaration",
                "scope": 340,
                "src": "1318:19:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 334,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1318:6:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 337,
                "name": "roles",
                "nodeType": "VariableDeclaration",
                "scope": 340,
                "src": "1347:10:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 336,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1347:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 339,
                "name": "active",
                "nodeType": "VariableDeclaration",
                "scope": 340,
                "src": "1367:11:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 338,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1367:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "User",
            "nodeType": "StructDefinition",
            "scope": 478,
            "src": "1296:89:5",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 344,
            "name": "userList",
            "nodeType": "VariableDeclaration",
            "scope": 478,
            "src": "1438:41:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$340_storage_$",
              "typeString": "mapping(address => struct UserDB.User)"
            },
            "typeName": {
              "id": 343,
              "keyType": {
                "id": 341,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1446:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1438:24:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$340_storage_$",
                "typeString": "mapping(address => struct UserDB.User)"
              },
              "valueType": {
                "contractScope": null,
                "id": 342,
                "name": "User",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 340,
                "src": "1457:4:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_User_$340_storage_ptr",
                  "typeString": "struct UserDB.User"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 356,
              "nodeType": "Block",
              "src": "1598:59:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 349,
                            "name": "userList",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 344,
                            "src": "1616:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$340_storage_$",
                              "typeString": "mapping(address => struct UserDB.User storage ref)"
                            }
                          },
                          "id": 351,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 350,
                            "name": "_user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 346,
                            "src": "1625:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1616:15:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_User_$340_storage",
                            "typeString": "struct UserDB.User storage ref"
                          }
                        },
                        "id": 352,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "active",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 339,
                        "src": "1616:22:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 348,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        816,
                        817
                      ],
                      "referencedDeclaration": 816,
                      "src": "1608:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 353,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1608:31:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 354,
                  "nodeType": "ExpressionStatement",
                  "src": "1608:31:5"
                },
                {
                  "id": 355,
                  "nodeType": "PlaceholderStatement",
                  "src": "1649:1:5"
                }
              ]
            },
            "documentation": "@notice modifier to check whether a user is already set in the state",
            "id": 357,
            "name": "userExists",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 347,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 346,
                  "name": "_user",
                  "nodeType": "VariableDeclaration",
                  "scope": 357,
                  "src": "1583:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 345,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1583:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1582:15:5"
            },
            "src": "1563:94:5",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 365,
              "nodeType": "Block",
              "src": "1829:3:5",
              "statements": []
            },
            "documentation": "@notice The constructor of the UserDB\n @param _logic the logic contract owning this database contract",
            "id": 366,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 362,
                    "name": "_logic",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 359,
                    "src": "1814:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 363,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 361,
                  "name": "Owned",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 798,
                  "src": "1808:5:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Owned_$798_$",
                    "typeString": "type(contract Owned)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1808:13:5"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 360,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 359,
                  "name": "_logic",
                  "nodeType": "VariableDeclaration",
                  "scope": 366,
                  "src": "1792:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 358,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1792:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1791:16:5"
            },
            "returnParameters": {
              "id": 364,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1829:0:5"
            },
            "scope": 478,
            "src": "1780:52:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 390,
              "nodeType": "Block",
              "src": "2336:89:5",
              "statements": [
                {
                  "assignments": [
                    379
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 379,
                      "name": "u",
                      "nodeType": "VariableDeclaration",
                      "scope": 390,
                      "src": "2346:14:5",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_User_$340_storage_ptr",
                        "typeString": "struct UserDB.User"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 378,
                        "name": "User",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 340,
                        "src": "2346:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$340_storage_ptr",
                          "typeString": "struct UserDB.User"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 383,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 380,
                      "name": "userList",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 344,
                      "src": "2363:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$340_storage_$",
                        "typeString": "mapping(address => struct UserDB.User storage ref)"
                      }
                    },
                    "id": 382,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 381,
                      "name": "_user",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 368,
                      "src": "2372:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2363:15:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_User_$340_storage",
                      "typeString": "struct UserDB.User storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2346:32:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 388,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 384,
                        "name": "u",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 379,
                        "src": "2388:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$340_storage_ptr",
                          "typeString": "struct UserDB.User storage pointer"
                        }
                      },
                      "id": 386,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "organization",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 335,
                      "src": "2388:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 387,
                      "name": "_organization",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 370,
                      "src": "2405:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "src": "2388:30:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 389,
                  "nodeType": "ExpressionStatement",
                  "src": "2388:30:5"
                }
              ]
            },
            "documentation": "@notice function to change the name of an existing organization, can only be used when the user already exists\n @dev the onlyOwner-modifier is used, so that only the logic-contract is allowed to write into the storage\n @param _user ethereum-address of an user\n @param _organization new name of the organization",
            "id": 391,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 373,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 372,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 756,
                  "src": "2296:9:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2296:9:5"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 375,
                    "name": "_user",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 368,
                    "src": "2325:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 376,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 374,
                  "name": "userExists",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 357,
                  "src": "2314:10:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2314:17:5"
              }
            ],
            "name": "setOrganization",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 371,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 368,
                  "name": "_user",
                  "nodeType": "VariableDeclaration",
                  "scope": 391,
                  "src": "2212:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 367,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2212:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 370,
                  "name": "_organization",
                  "nodeType": "VariableDeclaration",
                  "scope": 391,
                  "src": "2235:29:5",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 369,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2235:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2202:68:5"
            },
            "returnParameters": {
              "id": 377,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2336:0:5"
            },
            "scope": 478,
            "src": "2178:247:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 418,
              "nodeType": "Block",
              "src": "2993:114:5",
              "statements": [
                {
                  "assignments": [
                    401
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 401,
                      "name": "u",
                      "nodeType": "VariableDeclaration",
                      "scope": 418,
                      "src": "3003:14:5",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_User_$340_storage_ptr",
                        "typeString": "struct UserDB.User"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 400,
                        "name": "User",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 340,
                        "src": "3003:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$340_storage_ptr",
                          "typeString": "struct UserDB.User"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 405,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 402,
                      "name": "userList",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 344,
                      "src": "3020:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$340_storage_$",
                        "typeString": "mapping(address => struct UserDB.User storage ref)"
                      }
                    },
                    "id": 404,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 403,
                      "name": "_user",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 393,
                      "src": "3029:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3020:15:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_User_$340_storage",
                      "typeString": "struct UserDB.User storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3003:32:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 410,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 406,
                        "name": "u",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 401,
                        "src": "3045:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$340_storage_ptr",
                          "typeString": "struct UserDB.User storage pointer"
                        }
                      },
                      "id": 408,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "organization",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 335,
                      "src": "3045:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 409,
                      "name": "_organization",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 395,
                      "src": "3062:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "src": "3045:30:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 411,
                  "nodeType": "ExpressionStatement",
                  "src": "3045:30:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 416,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 412,
                        "name": "u",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 401,
                        "src": "3085:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$340_storage_ptr",
                          "typeString": "struct UserDB.User storage pointer"
                        }
                      },
                      "id": 414,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "active",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 339,
                      "src": "3085:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 415,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3096:4:5",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3085:15:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 417,
                  "nodeType": "ExpressionStatement",
                  "src": "3085:15:5"
                }
              ]
            },
            "documentation": "@notice function for creating, editing an user, it cannot be used to set a Role of an user\n @notice if the user does not exists yet it will be creates, otherwise the older userdata will be overwritten\n @dev the onlyOwner-modifier is used, so that only the logic-contract is allowed to write into the storage\n @param _user address of the user\n @param _organization organization the user is representing",
            "id": 419,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 398,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 397,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 756,
                  "src": "2979:9:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2979:9:5"
              }
            ],
            "name": "setUser",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 396,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 393,
                  "name": "_user",
                  "nodeType": "VariableDeclaration",
                  "scope": 419,
                  "src": "2895:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 392,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2895:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 395,
                  "name": "_organization",
                  "nodeType": "VariableDeclaration",
                  "scope": 419,
                  "src": "2918:29:5",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 394,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2918:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2885:68:5"
            },
            "returnParameters": {
              "id": 399,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2993:0:5"
            },
            "scope": 478,
            "src": "2869:238:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 440,
              "nodeType": "Block",
              "src": "3501:77:5",
              "statements": [
                {
                  "assignments": [
                    429
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 429,
                      "name": "u",
                      "nodeType": "VariableDeclaration",
                      "scope": 440,
                      "src": "3511:14:5",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_User_$340_storage_ptr",
                        "typeString": "struct UserDB.User"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 428,
                        "name": "User",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 340,
                        "src": "3511:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$340_storage_ptr",
                          "typeString": "struct UserDB.User"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 433,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 430,
                      "name": "userList",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 344,
                      "src": "3528:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$340_storage_$",
                        "typeString": "mapping(address => struct UserDB.User storage ref)"
                      }
                    },
                    "id": 432,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 431,
                      "name": "_user",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 421,
                      "src": "3537:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3528:15:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_User_$340_storage",
                      "typeString": "struct UserDB.User storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3511:32:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 438,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 434,
                        "name": "u",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 429,
                        "src": "3553:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$340_storage_ptr",
                          "typeString": "struct UserDB.User storage pointer"
                        }
                      },
                      "id": 436,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "active",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 339,
                      "src": "3553:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 437,
                      "name": "_active",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 423,
                      "src": "3564:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3553:18:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 439,
                  "nodeType": "ExpressionStatement",
                  "src": "3553:18:5"
                }
              ]
            },
            "documentation": "@notice function to (de-)active a user, dan only be used when the user already exists\n @dev the onlyOwner-modifier is used, so that only the logic-contract is allowed to write into the storage\n @param _user ethereum-address of an user\n @param _active flag if the account should be active",
            "id": 441,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 426,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 425,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 756,
                  "src": "3491:9:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3491:9:5"
              }
            ],
            "name": "setUserActive",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 424,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 421,
                  "name": "_user",
                  "nodeType": "VariableDeclaration",
                  "scope": 441,
                  "src": "3453:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 420,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3453:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 423,
                  "name": "_active",
                  "nodeType": "VariableDeclaration",
                  "scope": 441,
                  "src": "3468:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 422,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3468:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3452:29:5"
            },
            "returnParameters": {
              "id": 427,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3501:0:5"
            },
            "scope": 478,
            "src": "3430:148:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 462,
              "nodeType": "Block",
              "src": "3908:75:5",
              "statements": [
                {
                  "assignments": [
                    451
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 451,
                      "name": "u",
                      "nodeType": "VariableDeclaration",
                      "scope": 462,
                      "src": "3918:14:5",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_User_$340_storage_ptr",
                        "typeString": "struct UserDB.User"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 450,
                        "name": "User",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 340,
                        "src": "3918:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$340_storage_ptr",
                          "typeString": "struct UserDB.User"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 455,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 452,
                      "name": "userList",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 344,
                      "src": "3935:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$340_storage_$",
                        "typeString": "mapping(address => struct UserDB.User storage ref)"
                      }
                    },
                    "id": 454,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 453,
                      "name": "_user",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 443,
                      "src": "3944:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3935:15:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_User_$340_storage",
                      "typeString": "struct UserDB.User storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3918:32:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 460,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 456,
                        "name": "u",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 451,
                        "src": "3960:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$340_storage_ptr",
                          "typeString": "struct UserDB.User storage pointer"
                        }
                      },
                      "id": 458,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "roles",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 337,
                      "src": "3960:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 459,
                      "name": "_roles",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 445,
                      "src": "3970:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3960:16:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 461,
                  "nodeType": "ExpressionStatement",
                  "src": "3960:16:5"
                }
              ]
            },
            "documentation": "@notice function for editing the rights of an user\n @dev the onlyOwner-modifier is used, so that only the logic-contract is allowed to write into the storage\n @param _user address of the user\n @param _roles first name of the user",
            "id": 463,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 448,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 447,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 756,
                  "src": "3898:9:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3898:9:5"
              }
            ],
            "name": "setRoles",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 446,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 443,
                  "name": "_user",
                  "nodeType": "VariableDeclaration",
                  "scope": 463,
                  "src": "3861:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 442,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3861:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 445,
                  "name": "_roles",
                  "nodeType": "VariableDeclaration",
                  "scope": 463,
                  "src": "3876:11:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 444,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3876:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3860:28:5"
            },
            "returnParameters": {
              "id": 449,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3908:0:5"
            },
            "scope": 478,
            "src": "3843:140:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 476,
              "nodeType": "Block",
              "src": "4406:39:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 472,
                      "name": "userList",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 344,
                      "src": "4423:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$340_storage_$",
                        "typeString": "mapping(address => struct UserDB.User storage ref)"
                      }
                    },
                    "id": 474,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 473,
                      "name": "_user",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 465,
                      "src": "4432:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4423:15:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_User_$340_storage",
                      "typeString": "struct UserDB.User storage ref"
                    }
                  },
                  "functionReturnParameters": 471,
                  "id": 475,
                  "nodeType": "Return",
                  "src": "4416:22:5"
                }
              ]
            },
            "documentation": "@notice function to return all the data of an user\n @dev the onlyOwner-modifier is used, so that only the logic-contract is allowed to read directly from the contract\n @param _user account of the user to be returned\n @return returns user-struct",
            "id": 477,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 468,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 467,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 756,
                  "src": "4307:9:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4307:9:5"
              }
            ],
            "name": "getFullUser",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 466,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 465,
                  "name": "_user",
                  "nodeType": "VariableDeclaration",
                  "scope": 477,
                  "src": "4284:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 464,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4284:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4283:15:5"
            },
            "returnParameters": {
              "id": 471,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 470,
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "scope": 477,
                  "src": "4375:16:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_User_$340_memory_ptr",
                    "typeString": "struct UserDB.User"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 469,
                    "name": "User",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 340,
                    "src": "4375:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_User_$340_storage_ptr",
                      "typeString": "struct UserDB.User"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4363:38:5"
            },
            "scope": 478,
            "src": "4263:182:5",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 479,
        "src": "1264:3183:5"
      }
    ],
    "src": "928:3520:5"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.9",
  "updatedAt": "2019-05-16T15:21:02.863Z",
  "devdoc": {
    "methods": {
      "changeOwner(address)": {
        "params": {
          "_newOwner": "The address of the new owner"
        }
      },
      "constructor": {
        "params": {
          "_logic": "the logic contract owning this database contract"
        }
      },
      "getFullUser(address)": {
        "details": "the onlyOwner-modifier is used, so that only the logic-contract is allowed to read directly from the contract",
        "params": {
          "_user": "account of the user to be returned"
        },
        "return": "returns user-struct"
      },
      "setOrganization(address,string)": {
        "details": "the onlyOwner-modifier is used, so that only the logic-contract is allowed to write into the storage",
        "params": {
          "_organization": "new name of the organization",
          "_user": "ethereum-address of an user"
        }
      },
      "setRoles(address,uint256)": {
        "details": "the onlyOwner-modifier is used, so that only the logic-contract is allowed to write into the storage",
        "params": {
          "_roles": "first name of the user",
          "_user": "address of the user"
        }
      },
      "setUser(address,string)": {
        "details": "the onlyOwner-modifier is used, so that only the logic-contract is allowed to write into the storage",
        "params": {
          "_organization": "organization the user is representing",
          "_user": "address of the user"
        }
      },
      "setUserActive(address,bool)": {
        "details": "the onlyOwner-modifier is used, so that only the logic-contract is allowed to write into the storage",
        "params": {
          "_active": "flag if the account should be active",
          "_user": "ethereum-address of an user"
        }
      }
    },
    "title": "The database contract for the users, traders and admins of the certificate of origin"
  },
  "userdoc": {
    "methods": {
      "changeOwner(address)": {
        "notice": "`owner` can step down and assign some other address to this role"
      },
      "constructor": "The constructor of the UserDB",
      "getFullUser(address)": {
        "notice": "function to return all the data of an user"
      },
      "setOrganization(address,string)": {
        "notice": "function to change the name of an existing organization, can only be used when the user already exists"
      },
      "setRoles(address,uint256)": {
        "notice": "function for editing the rights of an user"
      },
      "setUser(address,string)": {
        "notice": "function for creating, editing an user, it cannot be used to set a Role of an userif the user does not exists yet it will be creates, otherwise the older userdata will be overwritten"
      },
      "setUserActive(address,bool)": {
        "notice": "function to (de-)active a user, dan only be used when the user already exists"
      }
    },
    "notice": "This contract only provides getter and setter methods that are only callable by the corresponging owner-contract"
  }
}